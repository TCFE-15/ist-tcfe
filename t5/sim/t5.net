*t5
*
* To use a subcircuit, the name must begin with 'X'.  For example:
* X1 1 2 3 4 5 uA741
*
* connections:   non-inverting input
*                |  inverting input
*                |  |  positive power supply
*                |  |  |  negative power supply
*                |  |  |  |  output
*                |  |  |  |  |
.subckt uA741    1  2  3  4  5
*
  c1   11 12 8.661E-12
  c2    6  7 30.00E-12
  dc    5 53 dx
  de   54  5 dx
  dlp  90 91 dx
  dln  92 90 dx
  dp    4  3 dx
  egnd 99  0 poly(2) (3,0) (4,0) 0 .5 .5
  fb    7 99 poly(5) vb vc ve vlp vln 0 10.61E6 -10E6 10E6 10E6 -10E6
  ga    6  0 11 12 188.5E-6
  gcm   0  6 10 99 5.961E-9
  iee  10  4 dc 15.16E-6
  hlim 90  0 vlim 1K
  q1   11  2 13 qx
  q2   12  1 14 qx
  r2    6  9 100.0E3
  rc1   3 11 5.305E3
  rc2   3 12 5.305E3
  re1  13 10 1.836E3
  re2  14 10 1.836E3
  ree  10 99 13.19E6
  ro1   8  5 50
  ro2   7 99 100
  rp    3  4 18.16E3
  vb    9  0 dc 0
  vc    3 53 dc 1
  ve   54  4 dc 1
  vlim  7  8 dc 0
  vlp  91  0 dc 40
  vln   0 92 dc 40
.model dx D(Is=800.0E-18 Rs=1)
.model qx NPN(Is=800.0E-18 Bf=93.75)
.ends



.options savecurrents

.param R1_value=1k
*two 1k in parallel
.param R2_value=500
.param R3_value=100k
*two 1k in parallel
.param R4_value=500
.param C1_value=220n
.param C2_value=220n

.csparam R1_value={R1_value}
.csparam R2_value={R2_value}
.csparam R3_value={R3_value}
.csparam R4_value={R4_value}
.csparam C1_value={C1_value}
.csparam C2_value={C2_value}

Vcc vcc 0 10.0
Vee vee 0 -10.0
Vin 1 0 0 ac 1.0 sin(0 10m 1k)
C1 1 in {C1_value}

X1 in inv_in vcc vee out uA741

R1 in 0 {R1_value}
R4 inv_in 0 {R4_value}
R3 inv_in out {R3_value}


* load
R2 out vo {R2_value}
C2 vo 0 {C2_value}
.op
.end

.control
*makes plots in color
set hcopypscolor=1
set color0=white
set color1=black
set color2=red
set color3=blue
set color4=violet
set color5=rgb:3/8/0
set color6=rgb:4/0/0

print all

* time analysis
tran 1e-5 1e-2
plot v(out)
hardcopy vo1.ps v(out)


* frequency analysis
ac dec 10 10 100MEG
let vgain=v(vo)/v(1)
plot vgain
plot db(vgain)
plot vdb(vo)
plot 180*vp(vo)/pi
hardcopy vo1f.ps vdb(vo)
echo vo1f_FIG
hardcopy vo1phase.ps 180*vp(vo)/pi
echo vo1phase_FIG

*INPUT IMPEDANCE
let Zinr=Re(-v(1)[20]/i(vin)[20])
let Zini=Im(-v(1)[20]/i(vin)[20])
let Zinamp=abs(-v(1)[20]/i(vin)[20])

echo  "zin_TAB"
echo "Zin = $&Zinr + $&Zini j"
echo "Zin - Amplitude = $&Zinamp "
echo  "zin_END"

*meas ac gaindb MAX vdb(vo) from=10 to=100MEG
*meas ac gain MAX v(vo) from=10 to=100MEG
meas ac fc MAX_AT vdb(vo) from=10 to=100MEG
meas ac gaindb FIND vdb(vo) AT=1k
meas ac gain FIND v(vo) AT=1k

let cost=({R1_value}+4*{R2_value}+{R3_value}+4*{R4_value})/1000+({C1_value}+{C2_value})*1000000+13323.3
let gainDev=abs(gain-100)
let fcDev=abs(fc-1000)
let merit=1/(cost*(gaindev+fcdev))

echo  "values_TAB"
echo R1 = $&R1_value
echo R2 = $&R2_value
echo R3 = $&R3_value
echo R4 = $&R4_value
echo C1 = $&C1_value
echo C2 = $&C2_value
echo  "values_END"

echo  "merit_TAB"
print cost
print gain
print gaindb
print fc
print gainDev
print fcDev
print merit
echo  "merit_END"

*need a different setup to measure output impedance

*quit
.endc 
*.end

